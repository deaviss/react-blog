{"id":"../src/redux/store.js","dependencies":[{"name":"C:\\Users\\Muminek\\Desktop\\project-1-react\\client\\.babelrc","includedInParent":true,"mtime":1555086814215},{"name":"C:\\Users\\Muminek\\Desktop\\project-1-react\\client\\package.json","includedInParent":true,"mtime":1555935083437},{"name":"redux","loc":{"line":1,"column":62},"parent":"C:\\Users\\Muminek\\Desktop\\project-1-react\\client\\src\\redux\\store.js","resolved":"C:\\Users\\Muminek\\Desktop\\project-1-react\\client\\node_modules\\redux\\es\\redux.js"},{"name":"redux-thunk","loc":{"line":2,"column":18},"parent":"C:\\Users\\Muminek\\Desktop\\project-1-react\\client\\src\\redux\\store.js","resolved":"C:\\Users\\Muminek\\Desktop\\project-1-react\\client\\node_modules\\redux-thunk\\es\\index.js"},{"name":"./reducers/index","loc":{"line":3,"column":20},"parent":"C:\\Users\\Muminek\\Desktop\\project-1-react\\client\\src\\redux\\store.js","resolved":"C:\\Users\\Muminek\\Desktop\\project-1-react\\client\\src\\redux\\reducers\\index.js"},{"name":"./actions/post-actions","loc":{"line":4,"column":27},"parent":"C:\\Users\\Muminek\\Desktop\\project-1-react\\client\\src\\redux\\store.js","resolved":"C:\\Users\\Muminek\\Desktop\\project-1-react\\client\\src\\redux\\actions\\post-actions.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _redux = require(\"redux\");\n\nvar _reduxThunk = _interopRequireDefault(require(\"redux-thunk\"));\n\nvar _index = _interopRequireDefault(require(\"./reducers/index\"));\n\nvar _postActions = require(\"./actions/post-actions\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar x = (0, _postActions.fetchPosts)();\nvar initialState = {};\nvar middleware = [_reduxThunk.default];\nvar store = (0, _redux.createStore)(_index.default, initialState, _redux.applyMiddleware.apply(void 0, middleware));\nvar _default = store;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../src/redux/store.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../src/redux/store.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"../src/redux/store.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"../src/redux/store.js","original":{"line":4,"column":0}},{"generated":{"line":18,"column":0},"source":"../src/redux/store.js","original":{"line":6,"column":0}},{"name":"x","generated":{"line":18,"column":4},"source":"../src/redux/store.js","original":{"line":6,"column":4}},{"generated":{"line":18,"column":5},"source":"../src/redux/store.js","original":{"line":6,"column":5}},{"generated":{"line":18,"column":8},"source":"../src/redux/store.js","original":{"line":6,"column":8}},{"generated":{"line":18,"column":38},"source":"../src/redux/store.js","original":{"line":6,"column":0}},{"generated":{"line":19,"column":0},"source":"../src/redux/store.js","original":{"line":8,"column":0}},{"name":"initialState","generated":{"line":19,"column":4},"source":"../src/redux/store.js","original":{"line":8,"column":6}},{"generated":{"line":19,"column":16},"source":"../src/redux/store.js","original":{"line":8,"column":18}},{"generated":{"line":19,"column":19},"source":"../src/redux/store.js","original":{"line":8,"column":21}},{"generated":{"line":19,"column":21},"source":"../src/redux/store.js","original":{"line":8,"column":0}},{"generated":{"line":20,"column":0},"source":"../src/redux/store.js","original":{"line":10,"column":0}},{"name":"middleware","generated":{"line":20,"column":4},"source":"../src/redux/store.js","original":{"line":10,"column":6}},{"generated":{"line":20,"column":14},"source":"../src/redux/store.js","original":{"line":10,"column":16}},{"generated":{"line":20,"column":17},"source":"../src/redux/store.js","original":{"line":10,"column":19}},{"name":"thunk","generated":{"line":20,"column":18},"source":"../src/redux/store.js","original":{"line":10,"column":20}},{"generated":{"line":20,"column":37},"source":"../src/redux/store.js","original":{"line":10,"column":19}},{"generated":{"line":20,"column":38},"source":"../src/redux/store.js","original":{"line":10,"column":0}},{"generated":{"line":21,"column":0},"source":"../src/redux/store.js","original":{"line":12,"column":0}},{"name":"store","generated":{"line":21,"column":4},"source":"../src/redux/store.js","original":{"line":12,"column":6}},{"generated":{"line":21,"column":9},"source":"../src/redux/store.js","original":{"line":12,"column":11}},{"generated":{"line":21,"column":12},"source":"../src/redux/store.js","original":{"line":12,"column":14}},{"name":"reducer","generated":{"line":21,"column":36},"source":"../src/redux/store.js","original":{"line":12,"column":26}},{"generated":{"line":21,"column":50},"source":"../src/redux/store.js","original":{"line":12,"column":14}},{"name":"initialState","generated":{"line":21,"column":52},"source":"../src/redux/store.js","original":{"line":12,"column":35}},{"generated":{"line":21,"column":64},"source":"../src/redux/store.js","original":{"line":12,"column":14}},{"name":"applyMiddleware","generated":{"line":21,"column":66},"source":"../src/redux/store.js","original":{"line":12,"column":49}},{"name":"middleware","generated":{"line":21,"column":103},"source":"../src/redux/store.js","original":{"line":12,"column":68}},{"generated":{"line":21,"column":113},"source":"../src/redux/store.js","original":{"line":12,"column":49}},{"generated":{"line":21,"column":114},"source":"../src/redux/store.js","original":{"line":12,"column":14}},{"generated":{"line":21,"column":115},"source":"../src/redux/store.js","original":{"line":12,"column":0}},{"name":"store","generated":{"line":22,"column":15},"source":"../src/redux/store.js","original":{"line":14,"column":15}}],"sources":{"../src/redux/store.js":"import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './reducers/index'\r\nimport { fetchPosts } from './actions/post-actions'\r\n\r\nvar x = fetchPosts()\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, applyMiddleware(...middleware))\r\n\r\nexport default store;"},"lineCount":null}},"error":null,"hash":"f8618dc30f1c748f51cc7a78061090dc","cacheData":{"env":{}}}